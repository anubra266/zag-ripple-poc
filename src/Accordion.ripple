import * as accordion from "@zag-js/accordion";
import { normalizeProps, useMachine } from "./zag-ripple/index.ripple";
import { effect, track, TrackedArray } from "ripple";


const accordionData = [
  { id: "home", label: "Home" },
  { id: "about", label: "About" },
  { id: "contact", label: "Contact" },
]

export component Accordion() {
  let value = track(["about"])

  // useMachine only needs to be a tracked object if you're using controlled values i.e. tracked values. But it doesn't hurt to have it when not using controlled values, so it's fine to always leave it as tracked.

  let service = track(() => useMachine(accordion.machine, {
    id: "accordion-1",
    defaultValue: ["about"],

    // comment out to be controlled
    //value: @value,
    //onValueChange(details) {
    //  @value = details.value
    //},
  }));

  let api = track(() => accordion.connect(@service, normalizeProps));

  <div class="accordion">
    <h1>{'Accordion Example'}</h1>

    
    <div {...@api.getRootProps()}>
    for (const item of accordionData) {
      <div key={item.id} {...@api.getItemProps({ value: item.id })}>
          <h3>
            {console.log("props", @api.getItemTriggerProps({ value: item.id }))}
            <button {...@api.getItemTriggerProps({ value: item.id })}>
              {item.label}
              <div {...@api.getItemIndicatorProps({ value: item.id })}>
                {'â–¶'}
              </div>
            </button>
          </h3>
          <div {...@api.getItemContentProps({ value: item.id })}>
            <p>
              {'This is the content for '}{item.label}{'. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}
            </p>
          </div>
        </div>
    }
    </div>

    <h2>{"Api Controls"}</h2>
    <button onClick={() => @api.setValue(["home"])}>{"Set home"}</button>
    <button onClick={() => @api.setValue(["about"])}>{"Set about"}</button>
    <button onClick={() => @api.setValue(["contact"])}>{"Set contact"}</button>

    <h2>{"Controlled"}</h2>
    <button onClick={() => { @value = ["home"]; }}>{'Home'}</button>
    <button onClick={() => { @value = ["about"]; }}>{'About'}</button>
    <button onClick={() => { @value = ["contact"]; }}>{'Contact'}</button>
  </div>
}